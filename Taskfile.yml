# https://taskfile.dev/#/
version: "3"

vars:
  PYTHON: python3
  FLITENV: .venvs/base/bin/python3 -m flitenv
env:
  FLIT_ROOT_INSTALL: "1"

tasks:
  install:base:
    status:
      - test -f .venvs/base/bin/flitenv
    cmds:
      - "{{.PYTHON}} -m venv .venvs/base"
      - .venvs/base/bin/python3 -m pip install -U flit
      - .venvs/base/bin/flit install --symlink --deps=production

  release:
    desc: generate and upload a new release
    cmds:
      - which gh
      - test {{.CLI_ARGS}}
      - cat flitenv/__init__.py | grep {{.CLI_ARGS}}
      - rm -rf dist/
      - flit build
      - flit publish
      - git tag {{.CLI_ARGS}}
      - git push
      - git push --tags
      - gh release create --generate-notes {{.CLI_ARGS}}
      - gh release upload {{.CLI_ARGS}} ./dist/*

  pytest:
    desc: "run Python tests"
    deps:
      - install:base
    cmds:
      - "{{.FLITENV}} run test pytest {{.CLI_ARGS}}"
  flake8:
    desc: "lint Python code"
    deps:
      - install:base
    cmds:
      - "{{.FLITENV}} run lint flake8 {{.CLI_ARGS}} ."
  ruff:
    desc: "lint Python code"
    deps:
      - install:base
    cmds:
      - "{{.FLITENV}} run lint ruff check {{.CLI_ARGS}} ."
  ruff:fix:
    desc: "fix all possible ruff violations"
    deps:
      - install:base
    cmds:
      - "{{.FLITENV}} run lint ruff check --fix-only {{.CLI_ARGS}} ."

  mypy:
    desc: "check type annotations"
    deps:
      - install:base
    cmds:
      - "{{.FLITENV}} run lint mypy {{.CLI_ARGS}}"
  isort:
    desc: "sort imports"
    deps:
      - install:base
    cmds:
      - "{{.FLITENV}} run lint isort {{.CLI_ARGS}} ."
  isort:check:
    desc: "sort imports"
    deps:
      - install:base
    cmds:
      - "{{.FLITENV}} run lint isort --check {{.CLI_ARGS}} ."

  # groups
  format:
    desc: "run all code formatters"
    cmds:
      - task: isort
      - task: ruff:fix
  lint:
    desc: "run all linters"
    cmds:
      - task: ruff
      - task: flake8
      - task: mypy
      - task: isort:check
  test:
    desc: "run all tests"
    cmds:
      - task: pytest
  all:
    desc: "run all code formatters, linters, and tests"
    cmds:
      - task: format
      - task: lint
      - task: test
